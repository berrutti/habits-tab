{"version":3,"sources":["components/HabitCard.js","components/FormDialog.js","theme.js","index.js","App.js"],"names":["HabitCard","props","classes","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","useStyles","Card","className","CardHeader","action","IconButton","onClick","handleDelete","bind","name","aria-label","CardActionArea","console","log","CardContent","Date","lastClicked","toString","FormDialog","useState","setName","timeframe","setTimeframe","Dialog","open","onClose","handleClose","aria-labelledby","onSubmit","event","preventDefault","handleAddCard","getTime","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","label","type","fullWidth","value","onChange","target","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","Button","color","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","cards","setCards","setOpen","handleOpen","handleDeleteCard","previousCards","filter","card","Container","Box","my","map","element","i","key","document","querySelector"],"mappings":"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","file":"static/js/main.e6712db1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { CardActionArea, CardContent, CardHeader, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\n\r\nconst HabitCard = props => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleCardClick = () => {\r\n    console.log('Card click!', props.name)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        action={\r\n          <IconButton onClick={props.handleDelete.bind(this, props.name)} aria-label=\"settings\">\r\n            <CloseRoundedIcon />\r\n          </IconButton>\r\n        } />\r\n      <CardActionArea onClick={handleCardClick}>\r\n        <CardContent>\r\n          {props.name} <br />\r\n            Last update: {new Date(props.lastClicked).toString()}\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default HabitCard;","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\n\r\nconst FormDialog = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [timeframe, setTimeframe] = useState('daily');\r\n\r\n  const handleTimeframeChange = (event) => {\r\n    setTimeframe(event.target.value);\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    event.preventDefault();\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    props.handleAddCard({ name: name, timeframe: timeframe, lastClicked: new Date().getTime() });\r\n    setName('');\r\n    setTimeframe('daily');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <form onSubmit={handleSubmit}>\r\n          <DialogTitle id=\"form-dialog-title\">Add a New Habit</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              To add a new Habit, please add a Name and select a Timeframe.\r\n          </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Habit\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={name}\r\n              onChange={handleNameChange}\r\n            />\r\n            <FormControl>\r\n              <InputLabel id=\"timeframe-label\">Timeframe</InputLabel>\r\n              <Select\r\n                labelId=\"timeframe-label\"\r\n                id=\"timeframe\"\r\n                value={timeframe}\r\n                fullWidth\r\n                onChange={handleTimeframeChange}\r\n              >\r\n                <MenuItem value='daily'>Daily</MenuItem>\r\n                <MenuItem value='weekly'>Weekly</MenuItem>\r\n                <MenuItem value='monthly'>Monthly</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n              Cancel\r\n          </Button>\r\n            <Button onClick={props.handleClose} type=\"submit\" color=\"primary\">\r\n              Add\r\n          </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormDialog;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n    <CssBaseline />\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.querySelector('#root'),\r\n);\r\n","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddCircleOutlineRoundedIcon from '@material-ui/icons/AddCircleOutlineRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HabitCard from './components/HabitCard';\r\nimport FormDialog from './components/FormDialog';\r\n\r\nexport default function App() {\r\n  const [cards, setCards] = useState([\r\n    { name: 'A new card', timeframe: 'daily', lastClicked: new Date().getTime() },\r\n    { name: 'Another card', timeframe: 'weekly', lastClicked: new Date().getTime() },\r\n    { name: 'Last card', timeframe: 'monthly', lastClicked: new Date().getTime() }\r\n  ]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAddCard = card => {\r\n    setCards(previousCards => [...previousCards, { name: card.name, timeframe: card.timeframe, lastClicked: card.lastClicked }]) // TODO: Check name uniqueness\r\n  }\r\n\r\n  const handleDeleteCard = name => {\r\n    setCards(previousCards => previousCards.filter(card => card.name !== name));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Box my={4}>\r\n        {cards.map((element, i) => {\r\n          return (<HabitCard key={i} name={element.name} lastClicked={element.lastClicked} handleDelete={handleDeleteCard} />);\r\n        })}\r\n      </Box>\r\n\r\n      <IconButton aria-label=\"delete\" className='margin' onClick={handleOpen}>\r\n        <AddCircleOutlineRoundedIcon fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <FormDialog open={open} handleOpen={handleOpen} handleClose={handleClose} handleAddCard={handleAddCard}></FormDialog>\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}